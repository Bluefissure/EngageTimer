//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EngageTimer.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EngageTimer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Close.
        /// </summary>
        internal static string Settings_Close {
            get {
                return ResourceManager.GetString("Settings_Close", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable accurate countdown mode for big countdown when possible.
        /// </summary>
        internal static string Settings_CountdownTab_AccurateMode {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_AccurateMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The game countdown shows the &quot;START&quot; text at 1 instead of 0.
        ///This setting only works when the original countdown is hidden..
        /// </summary>
        internal static string Settings_CountdownTab_AccurateMode_Help {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_AccurateMode_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable animation.
        /// </summary>
        internal static string Settings_CountdownTab_Animate {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Animate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Light effect.
        /// </summary>
        internal static string Settings_CountdownTab_AnimateOpacity {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_AnimateOpacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scaling effect.
        /// </summary>
        internal static string Settings_CountdownTab_AnimateScale {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_AnimateScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display.
        /// </summary>
        internal static string Settings_CountdownTab_CountdownDecimals_Left {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_CountdownDecimals_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to decimals in countdown.
        /// </summary>
        internal static string Settings_CountdownTab_CountdownDecimals_Right {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_CountdownDecimals_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scale.
        /// </summary>
        internal static string Settings_CountdownTab_CountdownScale {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_CountdownScale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable big countdown.
        /// </summary>
        internal static string Settings_CountdownTab_Enable {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Enable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide original countdown.
        /// </summary>
        internal static string Settings_CountdownTab_HideOriginalCountDown {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_HideOriginalCountDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Also replace numbers before 5.
        /// </summary>
        internal static string Settings_CountdownTab_HideOriginalCountDown_Help {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_HideOriginalCountDown_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &quot;big countdown&quot; feature adds the missing numbers to the in-game timer !.
        /// </summary>
        internal static string Settings_CountdownTab_Info1 {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Info1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to hue.
        /// </summary>
        internal static string Settings_CountdownTab_NumberHue {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_NumberHue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to brightness.
        /// </summary>
        internal static string Settings_CountdownTab_NumberLuminance {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_NumberLuminance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recolor instead of shifting hue.
        /// </summary>
        internal static string Settings_CountdownTab_NumberRecolor {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_NumberRecolor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to saturation.
        /// </summary>
        internal static string Settings_CountdownTab_NumberSaturation {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_NumberSaturation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Color.
        /// </summary>
        internal static string Settings_CountdownTab_NumberStyleTitle {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_NumberStyleTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Countdown offset.
        /// </summary>
        internal static string Settings_CountdownTab_OffsetText {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_OffsetText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to X.
        /// </summary>
        internal static string Settings_CountdownTab_OffsetX {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_OffsetX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Y.
        /// </summary>
        internal static string Settings_CountdownTab_OffsetY {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_OffsetY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Play a ticking sound for all numbers.
        /// </summary>
        internal static string Settings_CountdownTab_PlaySound {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_PlaySound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sound volume.
        /// </summary>
        internal static string Settings_CountdownTab_PlaySound_Volume {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_PlaySound_Volume", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Position and size.
        /// </summary>
        internal static string Settings_CountdownTab_PositioningTitle {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_PositioningTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable test mode.
        /// </summary>
        internal static string Settings_CountdownTab_Test_Start {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Test_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable test mode.
        /// </summary>
        internal static string Settings_CountdownTab_Test_Stop {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Test_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number style.
        /// </summary>
        internal static string Settings_CountdownTab_Texture {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Texture", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom.
        /// </summary>
        internal static string Settings_CountdownTab_Texture_custom {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Texture_custom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Load.
        /// </summary>
        internal static string Settings_CountdownTab_Texture_Custom_Load {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Texture_Custom_Load", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Texture Folder.
        /// </summary>
        internal static string Settings_CountdownTab_Texture_Custom_Path {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Texture_Custom_Path", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FFXIV.
        /// </summary>
        internal static string Settings_CountdownTab_Texture_default {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Texture_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WoW.
        /// </summary>
        internal static string Settings_CountdownTab_Texture_wow {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Texture_wow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Readable.
        /// </summary>
        internal static string Settings_CountdownTab_Texture_yellow {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Texture_yellow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Big countdown.
        /// </summary>
        internal static string Settings_CountdownTab_Title {
            get {
                return ResourceManager.GetString("Settings_CountdownTab_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable accurate countdown in floating window.
        /// </summary>
        internal static string Settings_FWTab_AccurateCountdown {
            get {
                return ResourceManager.GetString("Settings_FWTab_AccurateCountdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to See the Big countdown tab for an explanation.
        /// </summary>
        internal static string Settings_FWTab_AccurateCountdown_Help {
            get {
                return ResourceManager.GetString("Settings_FWTab_AccurateCountdown_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide.
        /// </summary>
        internal static string Settings_FWTab_AutoHide_Left {
            get {
                return ResourceManager.GetString("Settings_FWTab_AutoHide_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds after combat end.
        /// </summary>
        internal static string Settings_FWTab_AutoHide_Right {
            get {
                return ResourceManager.GetString("Settings_FWTab_AutoHide_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background color and opacity.
        /// </summary>
        internal static string Settings_FWTab_BackgroundColor {
            get {
                return ResourceManager.GetString("Settings_FWTab_BackgroundColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the current countdown value (e.g. -13).
        /// </summary>
        internal static string Settings_FWTab_CountdownPrecision_Help {
            get {
                return ResourceManager.GetString("Settings_FWTab_CountdownPrecision_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display countdown.
        /// </summary>
        internal static string Settings_FWTab_CountdownPrecision_Left {
            get {
                return ResourceManager.GetString("Settings_FWTab_CountdownPrecision_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to decimals.
        /// </summary>
        internal static string Settings_FWTab_CountdownPrecision_Right {
            get {
                return ResourceManager.GetString("Settings_FWTab_CountdownPrecision_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display countdown with.
        /// </summary>
        internal static string Settings_FWTab_CountdownPrecision_With_Left {
            get {
                return ResourceManager.GetString("Settings_FWTab_CountdownPrecision_With_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable floating window.
        /// </summary>
        internal static string Settings_FWTab_Display {
            get {
                return ResourceManager.GetString("Settings_FWTab_Display", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide combat time when not bound by duty.
        /// </summary>
        internal static string Settings_FWTab_DisplayStopwatchOnlyInDuty {
            get {
                return ResourceManager.GetString("Settings_FWTab_DisplayStopwatchOnlyInDuty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Basically hides the stopwatch when you are in the overworld.
        /// </summary>
        internal static string Settings_FWTab_DisplayStopwatchOnlyInDuty_Help {
            get {
                return ResourceManager.GetString("Settings_FWTab_DisplayStopwatchOnlyInDuty_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font size.
        /// </summary>
        internal static string Settings_FWTab_FontSize {
            get {
                return ResourceManager.GetString("Settings_FWTab_FontSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The floating window is a movable window that can display the countdown and the current combat duration..
        /// </summary>
        internal static string Settings_FWTab_Help {
            get {
                return ResourceManager.GetString("Settings_FWTab_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lock floating window.
        /// </summary>
        internal static string Settings_FWTab_Lock {
            get {
                return ResourceManager.GetString("Settings_FWTab_Lock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disables clicking and moving the window..
        /// </summary>
        internal static string Settings_FWTab_Lock_Help {
            get {
                return ResourceManager.GetString("Settings_FWTab_Lock_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the current combat duration.
        /// </summary>
        internal static string Settings_FWTab_StopwatchPrecision_Help {
            get {
                return ResourceManager.GetString("Settings_FWTab_StopwatchPrecision_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display combat timer.
        /// </summary>
        internal static string Settings_FWTab_StopwatchPrecision_Left {
            get {
                return ResourceManager.GetString("Settings_FWTab_StopwatchPrecision_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to decimals.
        /// </summary>
        internal static string Settings_FWTab_StopwatchPrecision_Right {
            get {
                return ResourceManager.GetString("Settings_FWTab_StopwatchPrecision_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Display combat timer with.
        /// </summary>
        internal static string Settings_FWTab_StopwatchPrecision_With_Left {
            get {
                return ResourceManager.GetString("Settings_FWTab_StopwatchPrecision_With_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Styling.
        /// </summary>
        internal static string Settings_FWTab_Styling {
            get {
                return ResourceManager.GetString("Settings_FWTab_Styling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text align.
        /// </summary>
        internal static string Settings_FWTab_TextAlign {
            get {
                return ResourceManager.GetString("Settings_FWTab_TextAlign", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Center.
        /// </summary>
        internal static string Settings_FWTab_TextAlign_Center {
            get {
                return ResourceManager.GetString("Settings_FWTab_TextAlign_Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Left.
        /// </summary>
        internal static string Settings_FWTab_TextAlign_Left {
            get {
                return ResourceManager.GetString("Settings_FWTab_TextAlign_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Right.
        /// </summary>
        internal static string Settings_FWTab_TextAlign_Right {
            get {
                return ResourceManager.GetString("Settings_FWTab_TextAlign_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text color.
        /// </summary>
        internal static string Settings_FWTab_TextColor {
            get {
                return ResourceManager.GetString("Settings_FWTab_TextColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Floating window.
        /// </summary>
        internal static string Settings_FWTab_Title {
            get {
                return ResourceManager.GetString("Settings_FWTab_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to EngageTimer settings.
        /// </summary>
        internal static string Settings_Title {
            get {
                return ResourceManager.GetString("Settings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enable webserver on port.
        /// </summary>
        internal static string Settings_Web_EnablePort {
            get {
                return ResourceManager.GetString("Settings_Web_EnablePort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This feature allows you to add a countdown and stopwatch overlay into your OBS (or other software) streams and recordings via a browser source..
        /// </summary>
        internal static string Settings_Web_Help {
            get {
                return ResourceManager.GetString("Settings_Web_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To add it to your scene, enable the webserver then create a browser source in your scene and add the following URL : .
        /// </summary>
        internal static string Settings_Web_HelpAdd {
            get {
                return ResourceManager.GetString("Settings_Web_HelpAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recommended window size is 300x100..
        /// </summary>
        internal static string Settings_Web_HelpSize {
            get {
                return ResourceManager.GetString("Settings_Web_HelpSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hide overlay.
        /// </summary>
        internal static string Settings_Web_Hide_Left {
            get {
                return ResourceManager.GetString("Settings_Web_Hide_Left", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to seconds after combat ends.
        /// </summary>
        internal static string Settings_Web_Hide_Right {
            get {
                return ResourceManager.GetString("Settings_Web_Hide_Right", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Web Server (OBS).
        /// </summary>
        internal static string Settings_Web_Title {
            get {
                return ResourceManager.GetString("Settings_Web_Title", resourceCulture);
            }
        }
    }
}
